{"version":3,"file":"index.modern.js","sources":["../src/index.ts"],"sourcesContent":["type Entity = { [componentName: string]: any }\n\ninterface IComponent<T> {\n  new(...args: any): T\n}\n\ntype QueryCallback = (entities: Entity[]) => void\n\ntype ComponentUpdater<T> = (component: T) => T\n\ninterface Query {\n  components: IComponent<unknown>[],\n  entities: Entity[]\n  callbacks: QueryCallback[]\n}\n\ninterface Config {\n  parallel?: boolean\n  onBefore?: (...args: any[]) => Promise<void>\n  onAfter?: (...args: any[]) => Promise<void>\n}\n\nexport function getID(entity: Entity): string {\n  return entity[ID.name].id\n}\n\nexport function getComponent<T>(entity: Entity, Component: IComponent<T>): T {\n  return entity[Component.name]\n}\n\nexport function hasComponent<T>(entity: Entity, components: IComponent<T>) {\n  return !!entity[components.name]\n}\n\nexport function hasComponents(entity: Entity, components: IComponent<unknown>[]) {\n  return components.every(c => !!entity[c.name])\n}\n\nclass _Component<T>  {\n  constructor(obj = {}) {\n    Object.assign(this, obj)\n  }\n}\ntype Component<T> = _Component<T> & T\nexport const Component: new <T>(obj: T) => _Component<T> & T = _Component as any;\nexport class ID extends Component<{ id: string }> { }\n\nexport class World {\n\n  protected config: Config = {}\n\n  private _systems: [Function, string][] = []\n  private _entities: { [id: string]: Entity } = {}\n  private _queries: { [key: string]: Query } = {}\n\n  constructor(config: Config = {}) {\n    this.config = config\n  }\n\n  protected makeQueryKey(components: IComponent<unknown>[]): string {\n    return components.map(c => c.name).sort().join('-')\n  }\n\n  protected queryWithKey(key: string, components: IComponent<unknown>[], persist?: Boolean): Entity[] {\n    if (this._queries[key]) return this._queries[key].entities\n    const entities = Object.values(this._entities).filter(e => hasComponents(e, components))\n    if (persist) this._queries[key] = { components, entities, callbacks: [] }\n    return entities\n  }\n\n  private _handleAddCallbacks(e: Entity) {\n    Object.values(this._queries).forEach(query => {\n      if (!query.entities.includes(e)) {\n        if (hasComponents(e, query.components)) {\n          query.entities.push(e)\n          query.callbacks.forEach(fn => fn(query.entities))\n        }\n      }\n    })\n  }\n\n  private _handleRemoveCallbacks(entity: Entity) {\n    Object.values(this._queries).forEach(query => {\n      if (!query.entities.includes(entity)) return\n      if (!hasComponents(entity, query.components)) {\n        query.entities.splice(query.entities.indexOf(entity), 1)\n        query.callbacks.forEach(fn => fn(query.entities))\n      }\n    })\n    if (Object.keys(entity).length === 1) delete this._entities[entity.ID.id]\n  }\n\n  public addComponent<T>(entity: Entity, Component: IComponent<T>, ...args: any[]) {\n    entity[Component.name] = new Component(...args)\n    this._handleAddCallbacks(entity)\n  }\n\n  public addComponents(entity: Entity, components: [IComponent<unknown>, ...any[]][]) {\n    if (!~components.length) return\n    components.forEach(([Constructor, ...args]) => {\n      entity[Constructor.name] = new Constructor(...args)\n    })\n    this._handleAddCallbacks(entity)\n  }\n\n  public createEntity(components: [IComponent<unknown>, ...any[]][]): Entity {\n    const entity: Entity = {}\n    components.forEach(([Constructor, ...args]) => {\n      entity[Constructor.name] = new Constructor(...args)\n    })\n    if (!entity.ID) entity.ID = new ID({ id: String(new Date().valueOf()) })\n    this._entities[entity.ID.id] = entity\n    Object.values(this._queries).forEach(query => {\n      if (hasComponents(entity, query.components)) query.entities.push(entity)\n      query.callbacks.forEach(fn => fn(query.entities))\n    })\n    return entity\n  }\n\n  public get(id: string): Entity {\n    return this._entities[id]\n  }\n\n  public query(components: IComponent<unknown>[], persist?: Boolean): Entity[] {\n    const key = this.makeQueryKey(components)\n    return this.queryWithKey(key, components, persist)\n  }\n\n  public register(system: Function, components: IComponent<unknown>[]): void {\n    const key = this.makeQueryKey(components)\n    this._systems.push([system, key])\n    this._queries[key] = { components, entities: [], callbacks: [] }\n  }\n\n  public removeComponent<T>(entity: Entity, component: IComponent<T>) {\n    if (!component || component.name === ID.name) return\n    delete entity[component.name]\n    this._handleRemoveCallbacks(entity)\n  }\n\n  public removeComponents(entity: Entity, components: IComponent<unknown>[]) {\n    if (!components || !~components.length) return\n    components.forEach(component => {\n      if (component.name === ID.name) return\n      delete entity[component.name]\n    })\n    this._handleRemoveCallbacks(entity)\n  }\n\n  public async run(...args: any[]): Promise<void> {\n    if (this.config.onBefore) await this.config.onBefore(...args)\n    if (this.config.parallel) {\n      this._systems.forEach(([system, queryKey]) => {\n        if (args) system(...args, this._queries[queryKey].entities)\n        else system(this._queries[queryKey].entities)\n      })\n    } else {\n      for (let [system, queryKey] of this._systems) {\n        if (args) await system(...args, this._queries[queryKey].entities)\n        else await system(this._queries[queryKey].entities)\n      }\n    }\n    if (this.config.onAfter) await this.config.onAfter(...args)\n  }\n\n  public subscribe(components: IComponent<unknown>[], callback: QueryCallback, emit?: boolean): Function {\n    const key = this.makeQueryKey(components)\n    const entities = this.queryWithKey(key, components)\n    if (!!this._queries[key]) this._queries[key].callbacks.push(callback)\n    else this._queries[key] = {\n      components,\n      entities,\n      callbacks: [callback]\n    }\n    if (emit) callback(entities)\n    return () => {\n      if (!!this._queries[key]) {\n        this._queries[key].callbacks.splice(this._queries[key].callbacks.indexOf(callback), 1)\n      }\n    }\n  }\n\n  public unsubscribe(components: IComponent<unknown>[], callback: QueryCallback): void {\n    const key = this.makeQueryKey(components)\n    if (!!this._queries[key]) {\n      this._queries[key].callbacks.splice(this._queries[key].callbacks.indexOf(callback), 1)\n    }\n  }\n\n  public updateComponent<T>(entity: Entity, Component: IComponent<T>, update: any | ComponentUpdater<T>): void {\n    entity[Component.name] = typeof update === 'function' ? update(entity[Component.name]) || entity[Component.name] : update\n    Object.values(this._queries).forEach(query => {\n      if (query.entities.includes(entity)) {\n        query.callbacks.forEach(fn => fn(query.entities))\n      }\n    })\n  }\n}\n"],"names":["getID","entity","ID","name","id","getComponent","Component","hasComponent","components","hasComponents","every","c","constructor","obj","Object","assign","this","World","config","makeQueryKey","map","sort","join","queryWithKey","key","persist","_queries","entities","values","_entities","filter","e","callbacks","_handleAddCallbacks","forEach","query","includes","push","fn","_handleRemoveCallbacks","splice","indexOf","keys","length","addComponent","args","addComponents","Constructor","createEntity","String","Date","valueOf","get","register","system","_systems","removeComponent","component","removeComponents","[object Object]","onBefore","parallel","queryKey","onAfter","subscribe","callback","emit","unsubscribe","updateComponent","update"],"mappings":"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"}