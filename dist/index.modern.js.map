{"version":3,"file":"index.modern.js","sources":["../src/index.ts"],"sourcesContent":["type Entity = {}\n\ninterface ClassComponent<T> {\n  new(...args: any): T\n  name: string\n}\n\ntype Component<T> = ClassComponent<T> | Function\n\ntype QueryCallback = (...entities: Entity[]) => void\n\ninterface Query {\n  components: Component<unknown>[],\n  entities: Entity[]\n  callbacks: QueryCallback[]\n}\n\ninterface Config {\n  parallel?: boolean\n  onBefore?: (msg?: any) => Promise<void>\n  onAfter?: (msg?: any) => Promise<void>\n}\n\nexport function getComponent<T>(entity: Entity, Component: Component<T>): T {\n  return entity[Component.name]\n}\n\nexport function hasComponent(entity: Entity, ...components: Component<unknown>[]) {\n  return components.every(c => !!entity[c.name])\n}\n\nexport default class World {\n\n  protected config: Config = {}\n\n  private _systems: [Function, string][] = []\n  private _entities: Entity[] = []\n  private _queries: { [key: string]: Query } = {}\n\n  constructor(config: Config = {}) {\n    this.config = config\n  }\n\n  protected makeQueryKey(...components: Component<unknown>[]): string {\n    return components.map(c => c.name).sort().join('-')\n  }\n\n  protected queryWithKey(key, ...components: Component<unknown>[]): Entity[] {\n    if (this._queries[key]) return this._queries[key].entities\n    \n    return this._entities.filter(e => components.every(c => !!e[c.name]))\n  }\n\n  public register(system: Function, ...components: Component<unknown>[]): void {\n    const key = this.makeQueryKey(...components)\n    this._systems.push([system, key])\n    this._queries[key] = { components, entities: [], callbacks: [] }\n  }\n\n  public query(...components: Component<unknown>[]): Entity[] {\n    const key = this.makeQueryKey(...components)\n    return this.queryWithKey(key, ...components)\n  }\n\n  public subscribe(components: Component<unknown>[], callback: QueryCallback, emit: boolean = false): Function {\n    const key = this.makeQueryKey(...components)\n    const entities = this.queryWithKey(key, ...components)\n    if (!!this._queries[key]) this._queries[key].callbacks.push(callback)\n    else this._queries[key] = {\n      components,\n      entities,\n      callbacks: [callback]\n    }\n    if(emit) callback(entities)\n    return () => {\n      if(!!this._queries[key]) {\n        this._queries[key].callbacks.splice(this._queries[key].callbacks.indexOf(callback), 1)\n      }\n    }\n  }\n\n  public createEntity(...components: [Component<unknown>, ...any[]][]): Entity {\n    const entity: Entity = {}\n\n    components.forEach(([Constructor, ...args]) => {\n      entity[Constructor.name] = new (Constructor as ClassComponent<unknown>)(...args)\n    })\n\n    this._entities.push(entity)\n\n    Object.values(this._queries).forEach(query => {\n      if (query.components.every(c => !!entity[c.name])) {\n        query.entities.push(entity)\n      }\n\n      query.callbacks.forEach(fn => fn(query.entities))\n    })\n\n    return entity\n  }\n\n  public addComponent(entity: Entity, ...components: [Component<unknown>, ...any[]][]) {\n    if (!~components.length) return\n    components.forEach(([Constructor, ...args]) => {\n      entity[Constructor.name] = new (Constructor as ClassComponent<unknown>)(...args)\n    })\n    Object.values(this._queries).forEach(query => {\n      if (!query.entities.includes(entity)) {\n        if(query.components.every(c => !!entity[c.name])) {\n          query.entities.push(entity)\n        }\n      }\n      query.callbacks.forEach(fn => fn(query.entities))\n    })\n  }\n\n  public removeComponent(entity: Entity, ...components: Component<unknown>[]) {\n    if (!~components.length) return\n    components.forEach(component => {\n      delete entity[component.name]\n    })\n    Object.values(this._queries).forEach(query => {\n      if (!query.entities.includes(entity)) return\n\n      if(!query.components.every(c => !!entity[c.name])) {\n        query.entities.splice(query.entities.indexOf(entity), 1)\n      }\n      query.callbacks.forEach(fn => fn(query.entities))\n    })\n    if (!~Object.keys(entity).length) this._entities.splice(this._entities.indexOf(entity), 1)\n  }\n\n  public async run(msg?: any): Promise<void> {\n    if (this.config.onBefore) await this.config.onBefore(msg)\n    if(!this.config.parallel) {\n      for(let [system, queryKey] of this._systems) {\n        if(msg) await system(msg, this._queries[queryKey].entities)\n        else await system(this._queries[queryKey].entities)\n        this._queries[queryKey].callbacks.forEach(fn => fn(this._queries[queryKey].entities))\n      } \n    } else {\n      this._systems.forEach(([system, queryKey]) => {\n        if(msg) system(msg, this._queries[queryKey].entities)\n        else system(this._queries[queryKey].entities)\n        this._queries[queryKey].callbacks.forEach(fn => fn(this._queries[queryKey].entities))\n      })\n    }\n    if (this.config.onAfter) await this.config.onAfter(msg)\n  }\n}\n"],"names":["getComponent","entity","Component","name","hasComponent","components","every","c","constructor","config","this","makeQueryKey","map","sort","join","queryWithKey","key","_queries","entities","_entities","filter","e","register","system","_systems","push","callbacks","query","subscribe","callback","emit","splice","indexOf","createEntity","forEach","Constructor","args","Object","values","fn","addComponent","length","includes","removeComponent","component","keys","[object Object]","msg","onBefore","parallel","queryKey","_this","onAfter"],"mappings":"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"}