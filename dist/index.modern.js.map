{"version":3,"file":"index.modern.js","sources":["../src/index.ts"],"sourcesContent":["type Entity = {}\n\ninterface Component<T> {\n  new(...args: any): T\n  name: string\n}\n\ntype QueryCallback = (entities: Entity[]) => void\n\ninterface Query {\n  components: Component<unknown>[],\n  entities: Entity[]\n  callbacks: QueryCallback[]\n}\n\ninterface Config {\n  parallel?: boolean\n  onBefore?: (...args: any[]) => Promise<void>\n  onAfter?: (...args: any[]) => Promise<void>\n}\n\nexport function getComponent<T>(entity: Entity, Component: Component<T>): T {\n  return entity[Component.name]\n}\n\nexport function hasComponent<T>(entity: Entity, components: Component<T>) {\n  return !!entity[components.name]\n}\n\nexport function hasComponents(entity: Entity, components: Component<unknown>[]) {\n  return components.every(c => !!entity[c.name])\n}\n\nexport default class World {\n\n  protected config: Config = {}\n\n  private _systems: [Function, string][] = []\n  private _entities: Entity[] = []\n  private _queries: { [key: string]: Query } = {}\n\n  constructor(config?: Config) {\n    this.config = config || {}\n  }\n\n  protected makeQueryKey(components: Component<unknown>[]): string {\n    return components.map(c => c.name).sort().join('-')\n  }\n\n  protected queryWithKey(key, components: Component<unknown>[]): Entity[] {\n    if (this._queries[key]) return this._queries[key].entities\n    \n    return this._entities.filter(e => hasComponents(e, components))\n  }\n\n  private _handleAddCallbacks (entity) {\n    Object.values(this._queries).forEach(query => {\n      if (!query.entities.includes(entity)) {\n        if(query.components.every(c => !!entity[c.name])) {\n          query.entities.push(entity)\n          query.callbacks.forEach(fn => fn(query.entities))\n        }\n      }\n    })\n  }\n\n  private _handleRemoveCallbacks (entity) {\n    Object.values(this._queries).forEach(query => {\n      if (!query.entities.includes(entity)) return\n      if(!query.components.every(c => !!entity[c.name])) {\n        query.entities.splice(query.entities.indexOf(entity), 1)\n        query.callbacks.forEach(fn => fn(query.entities))\n      }\n    })\n    if (!~Object.keys(entity).length) this._entities.splice(this._entities.indexOf(entity), 1)\n  }\n\n  public addComponent<T>(entity: Entity, Component: Component<T>, ...args: any[]) {\n    entity[Component.name] = new Component(...args)\n    this._handleAddCallbacks(entity)\n  }\n\n  public addComponents(entity: Entity, components: [Component<unknown>, ...any[]][]) {\n    if (!~components.length) return\n    components.forEach(([Constructor, ...args]) => {\n      entity[Constructor.name] = new Constructor(...args)\n    })\n    this._handleAddCallbacks(entity)\n  }\n\n  public createEntity(components: [Component<unknown>, ...any[]][]): Entity {\n    const entity: Entity = {}\n\n    components.forEach(([Constructor, ...args]) => {\n      entity[Constructor.name] = new Constructor(...args)\n    })\n\n    this._entities.push(entity)\n\n    Object.values(this._queries).forEach(query => {\n      if (query.components.every(c => !!entity[c.name])) {\n        query.entities.push(entity)\n      }\n\n      query.callbacks.forEach(fn => fn(query.entities))\n    })\n\n    return entity\n  }\n\n  public query(components: Component<unknown>[]): Entity[] {\n    const key = this.makeQueryKey(components)\n    return this.queryWithKey(key, components)\n  }\n\n  public register(system: Function, components: Component<unknown>[]): void {\n    const key = this.makeQueryKey(components)\n    this._systems.push([system, key])\n    this._queries[key] = { components, entities: [], callbacks: [] }\n  }\n\n  public removeComponent<T>(entity: Entity, component: Component<T>) {\n    if (!component) return\n    delete entity[component.name]\n    this._handleRemoveCallbacks(entity)\n  }\n\n  public removeComponents(entity: Entity, components: Component<unknown>[]) {\n    if (!components || !~components.length) return\n    components.forEach(component => {\n      delete entity[component.name]\n    })\n    this._handleRemoveCallbacks(entity)\n  }\n\n  public async run(...args: any[]): Promise<void> {\n    if (this.config.onBefore) await this.config.onBefore(...args)\n    if(this.config.parallel) {\n      this._systems.forEach(([system, queryKey]) => {\n        if(args) system(...args, this._queries[queryKey].entities)\n        else system(this._queries[queryKey].entities)\n      })\n    } else {\n      for(let [system, queryKey] of this._systems) {\n        if(args) await system(...args, this._queries[queryKey].entities)\n        else await system(this._queries[queryKey].entities)\n      } \n    }\n    if (this.config.onAfter) await this.config.onAfter(...args)\n  }\n\n  public subscribe(components: Component<unknown>[], callback: QueryCallback, emit?: boolean): Function {\n    const key = this.makeQueryKey(components)\n    const entities = this.queryWithKey(key, components)\n    if (!!this._queries[key]) this._queries[key].callbacks.push(callback)\n    else this._queries[key] = {\n      components,\n      entities,\n      callbacks: [callback]\n    }\n    if(emit) callback(entities)\n    return () => {\n      if(!!this._queries[key]) {\n        this._queries[key].callbacks.splice(this._queries[key].callbacks.indexOf(callback), 1)\n      }\n    }\n  }\n\n  public unsubscribe(components: Component<unknown>[], callback: QueryCallback): void {\n    const key = this.makeQueryKey(components)\n    if(!!this._queries[key]) {\n      this._queries[key].callbacks.splice(this._queries[key].callbacks.indexOf(callback), 1)\n    }\n  }\n\n  public updateComponent<T>(entity: Entity, Component, updater: (component: T) => T): void {\n    entity[Component.name] = updater(entity[Component.name]) || entity[Component.name]\n    Object.values(this._queries).forEach(query => {\n      if (query.entities.includes(entity)) {\n        query.callbacks.forEach(fn => fn(query.entities))\n      }\n    })\n  }\n}\n"],"names":["getComponent","entity","Component","name","hasComponent","components","hasComponents","every","c","constructor","config","this","makeQueryKey","map","sort","join","queryWithKey","key","_queries","entities","_entities","filter","e","_handleAddCallbacks","Object","values","forEach","query","includes","push","callbacks","fn","_handleRemoveCallbacks","splice","indexOf","keys","length","addComponent","args","addComponents","Constructor","createEntity","register","system","_systems","removeComponent","component","removeComponents","[object Object]","onBefore","parallel","queryKey","onAfter","subscribe","callback","emit","unsubscribe","updateComponent","updater"],"mappings":"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"}