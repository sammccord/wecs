{"version":3,"file":"index.m.js","sources":["../src/index.ts"],"sourcesContent":["type Entity = { [componentName: string]: any }\n\ninterface IComponent<T> {\n  new(...args: any): T\n}\n\ntype QueryCallback = (entities: Entity[]) => void\n\ntype ComponentUpdater<T> = (component: T) => T\n\ninterface Query {\n  components: IComponent<unknown>[],\n  entities: Entity[]\n  callbacks: QueryCallback[]\n}\n\ninterface Config {\n  parallel?: boolean\n  onBefore?: (...args: any[]) => Promise<void>\n  onAfter?: (...args: any[]) => Promise<void>\n}\n\nexport function getID(entity: Entity): string {\n  return entity[ID.name].id\n}\n\nexport function getComponent<T>(entity: Entity, Component: IComponent<T>): T {\n  return entity[Component.name]\n}\n\nexport function hasComponent<T>(entity: Entity, components: IComponent<T>) {\n  return !!entity[components.name]\n}\n\nexport function hasComponents(entity: Entity, components: IComponent<unknown>[]) {\n  return components.every(c => !!entity[c.name])\n}\n\nclass _Component<T>  {\n  constructor(obj = {}) {\n    Object.assign(this, obj)\n  }\n}\ntype Component<T> = _Component<T> & T\nexport const Component: new <T>(obj: T) => _Component<T> & T = _Component as any;\nexport class ID extends Component<{ id: string }> { }\n\nexport class World {\n\n  protected config: Config = {}\n\n  private _systems: [Function, string][] = []\n  private _entities: { [id: string]: Entity } = {}\n  private _queries: { [key: string]: Query } = {}\n\n  constructor(config: Config = {}) {\n    this.config = config\n  }\n\n  protected makeQueryKey(components: IComponent<unknown>[]): string {\n    return components.map(c => c.name).sort().join('-')\n  }\n\n  protected queryWithKey(key: string, components: IComponent<unknown>[], persist?: Boolean): Entity[] {\n    if (this._queries[key]) return this._queries[key].entities\n    const entities = Object.values(this._entities).filter(e => hasComponents(e, components))\n    if (persist) this._queries[key] = { components, entities, callbacks: [] }\n    return entities\n  }\n\n  private _handleAddCallbacks(e: Entity) {\n    Object.values(this._queries).forEach(query => {\n      if (!query.entities.includes(e)) {\n        if (hasComponents(e, query.components)) {\n          query.entities.push(e)\n          query.callbacks.forEach(fn => fn(query.entities))\n        }\n      }\n    })\n  }\n\n  private _handleRemoveCallbacks(entity: Entity) {\n    Object.values(this._queries).forEach(query => {\n      if (!query.entities.includes(entity)) return\n      if (!hasComponents(entity, query.components)) {\n        query.entities.splice(query.entities.indexOf(entity), 1)\n        query.callbacks.forEach(fn => fn(query.entities))\n      }\n    })\n    if (Object.keys(entity).length === 1) delete this._entities[entity.ID.id]\n  }\n\n  public addComponent<T>(entity: Entity, Component: IComponent<T>, ...args: any[]) {\n    entity[Component.name] = new Component(...args)\n    this._handleAddCallbacks(entity)\n  }\n\n  public addComponents(entity: Entity, components: [IComponent<unknown>, ...any[]][]) {\n    if (!~components.length) return\n    components.forEach(([Constructor, ...args]) => {\n      entity[Constructor.name] = new Constructor(...args)\n    })\n    this._handleAddCallbacks(entity)\n  }\n\n  public createEntity(components: [IComponent<unknown>, ...any[]][]): Entity {\n    const entity: Entity = {}\n    components.forEach(([Constructor, ...args]) => {\n      entity[Constructor.name] = new Constructor(...args)\n    })\n    if (!entity.ID) entity.ID = new ID({ id: String(new Date().valueOf()) })\n    this._entities[entity.ID.id] = entity\n    Object.values(this._queries).forEach(query => {\n      if (hasComponents(entity, query.components)) query.entities.push(entity)\n      query.callbacks.forEach(fn => fn(query.entities))\n    })\n    return entity\n  }\n\n  public get(id: string): Entity {\n    return this._entities[id]\n  }\n\n  public query(components: IComponent<unknown>[], persist?: Boolean): Entity[] {\n    const key = this.makeQueryKey(components)\n    return this.queryWithKey(key, components, persist)\n  }\n\n  public register(system: Function, components: IComponent<unknown>[]): void {\n    const key = this.makeQueryKey(components)\n    this._systems.push([system, key])\n    this._queries[key] = { components, entities: [], callbacks: [] }\n  }\n\n  public removeComponent<T>(entity: Entity, component: IComponent<T>) {\n    if (!component || component.name === ID.name) return\n    delete entity[component.name]\n    this._handleRemoveCallbacks(entity)\n  }\n\n  public removeComponents(entity: Entity, components: IComponent<unknown>[]) {\n    if (!components || !~components.length) return\n    components.forEach(component => {\n      if (component.name === ID.name) return\n      delete entity[component.name]\n    })\n    this._handleRemoveCallbacks(entity)\n  }\n\n  public async run(...args: any[]): Promise<void> {\n    if (this.config.onBefore) await this.config.onBefore(...args)\n    if (this.config.parallel) {\n      this._systems.forEach(([system, queryKey]) => {\n        if (args) system(...args, this._queries[queryKey].entities)\n        else system(this._queries[queryKey].entities)\n      })\n    } else {\n      for (let [system, queryKey] of this._systems) {\n        if (args) await system(...args, this._queries[queryKey].entities)\n        else await system(this._queries[queryKey].entities)\n      }\n    }\n    if (this.config.onAfter) await this.config.onAfter(...args)\n  }\n\n  public subscribe(components: IComponent<unknown>[], callback: QueryCallback, emit?: boolean): Function {\n    const key = this.makeQueryKey(components)\n    const entities = this.queryWithKey(key, components)\n    if (!!this._queries[key]) this._queries[key].callbacks.push(callback)\n    else this._queries[key] = {\n      components,\n      entities,\n      callbacks: [callback]\n    }\n    if (emit) callback(entities)\n    return () => {\n      if (!!this._queries[key]) {\n        this._queries[key].callbacks.splice(this._queries[key].callbacks.indexOf(callback), 1)\n      }\n    }\n  }\n\n  public unsubscribe(components: IComponent<unknown>[], callback: QueryCallback): void {\n    const key = this.makeQueryKey(components)\n    if (!!this._queries[key]) {\n      this._queries[key].callbacks.splice(this._queries[key].callbacks.indexOf(callback), 1)\n    }\n  }\n\n  public updateComponent<T>(entity: Entity, Component: IComponent<T>, update: any | ComponentUpdater<T>): void {\n    entity[Component.name] = typeof update === 'function' ? update(entity[Component.name]) || entity[Component.name] : update\n    Object.values(this._queries).forEach(query => {\n      if (query.entities.includes(entity)) {\n        query.callbacks.forEach(fn => fn(query.entities))\n      }\n    })\n  }\n}\n"],"names":["Symbol","iterator","pact","value","state","bind","observer","o","onRejected","this","_this","onFulfilled","_settle","thenable","getID","entity","ID","name","id","getComponent","Component","hasComponent","components","hasComponents","every","c","constructor","obj","Object","assign","World","config","makeQueryKey","map","sort","join","queryWithKey","key","persist","_queries","entities","values","_entities","filter","e","callbacks","_handleAddCallbacks","forEach","query","includes","push","fn","_handleRemoveCallbacks","splice","indexOf","keys","length","addComponent","addComponents","Constructor","args","createEntity","String","Date","valueOf","get","register","system","_systems","removeComponent","component","removeComponents","run","onAfter","parallel","check","i","_cycle","result","then","reject","queryKey","onBefore","subscribe","callback","emit","unsubscribe","updateComponent","update"],"mappings":"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"}