{"version":3,"file":"index.umd.js","sources":["../src/index.ts"],"sourcesContent":["type Entity = { [componentName: string]: any }\n\ninterface IComponent<T> {\n  new(...args: any): T\n}\n\ntype EntitiesCallback = (entities: Entity[]) => void\ntype ChangeCallback<T> = (entity: Entity, updates: ComponentUpdate<T>[]) => void\n\ntype ComponentUpdater<T> = (component: T) => T\ntype ComponentUpdate<T> = [IComponent<T>, any | ComponentUpdater<T>]\n\nclass _Component<T>  {\n  constructor(obj = {}) {\n    Object.assign(this, obj)\n  }\n}\ntype Component<T> = _Component<T> & T\nexport const Component: new <T>(obj: T) => _Component<T> & T = _Component as any;\nexport class ID extends Component<{ id: string }> { }\n\ninterface Query {\n  components: IComponent<unknown>[],\n  entities: Entity[]\n  subscriptions: EntitiesCallback[]\n  changeHandlers: ChangeCallback<any>[]\n}\n\ninterface Config {\n  parallel?: boolean\n  onBefore?: (...args: any[]) => Promise<void>\n  onAfter?: (...args: any[]) => Promise<void>\n}\n\nexport function getID(entity: Entity): string {\n  return entity[ID.name].id\n}\n\nexport function getComponent<T>(entity: Entity, Component: IComponent<T>): T {\n  return entity[Component.name]\n}\n\nexport function hasComponent<T>(entity: Entity, components: IComponent<T>) {\n  return !!entity[components.name]\n}\n\nexport function hasComponents(entity: Entity, components: IComponent<unknown>[]) {\n  return components.every(c => !!entity[c.name])\n}\n\nexport class World {\n\n  protected config: Config = {}\n\n  private _systems: [Function, string][] = []\n  private _entities: { [id: string]: Entity } = {}\n  private _queries: { [key: string]: Query } = {}\n\n  constructor(config: Config = {}) {\n    this.config = config\n  }\n\n  protected makeQueryKey(components: IComponent<unknown>[]): string {\n    return components.map(c => c.name).sort().join('-')\n  }\n\n  protected queryWithKey(key: string, components: IComponent<unknown>[], persist?: Boolean): Entity[] {\n    if (this._queries[key]) return this._queries[key].entities\n    const entities = Object.values(this._entities).filter(e => hasComponents(e, components))\n    if (persist) this._queries[key] = { components, entities, subscriptions: [], changeHandlers: [] }\n    return entities\n  }\n\n  private _handleAddCallbacks(e: Entity) {\n    Object.values(this._queries).forEach(query => {\n      if (!query.entities.includes(e)) {\n        if (hasComponents(e, query.components)) {\n          query.entities.push(e)\n          query.subscriptions.forEach(fn => fn(query.entities))\n        }\n      }\n    })\n  }\n\n  private _handleRemoveCallbacks(entity: Entity) {\n    Object.values(this._queries).forEach(query => {\n      if (!query.entities.includes(entity)) return\n      if (!hasComponents(entity, query.components)) {\n        query.entities.splice(query.entities.indexOf(entity), 1)\n        query.subscriptions.forEach(fn => fn(query.entities))\n      }\n    })\n    if (Object.keys(entity).length === 1) delete this._entities[entity.ID.id]\n  }\n\n  public addComponent<T>(entity: Entity, Component: IComponent<T>, ...args: any[]) {\n    entity[Component.name] = new Component(...args)\n    this._handleAddCallbacks(entity)\n  }\n\n  public addComponents(entity: Entity, components: [IComponent<unknown>, ...any[]][]) {\n    if (!~components.length) return\n    components.forEach(([Constructor, ...args]) => {\n      entity[Constructor.name] = new Constructor(...args)\n    })\n    this._handleAddCallbacks(entity)\n  }\n\n  public createEntity(components: [IComponent<unknown>, ...any[]][]): Entity {\n    const entity: Entity = {}\n    components.forEach(([Constructor, ...args]) => {\n      entity[Constructor.name] = new Constructor(...args)\n    })\n    if (!entity.ID) entity.ID = new ID({ id: String(new Date().valueOf()) })\n    this._entities[entity.ID.id] = entity\n    Object.values(this._queries).forEach(query => {\n      if (hasComponents(entity, query.components)) query.entities.push(entity)\n      query.subscriptions.forEach(fn => fn(query.entities))\n    })\n    return entity\n  }\n\n  public get(id: string): Entity {\n    return this._entities[id]\n  }\n\n  public query(components: IComponent<unknown>[], persist?: Boolean): Entity[] {\n    const key = this.makeQueryKey(components)\n    return this.queryWithKey(key, components, persist)\n  }\n\n  public register(system: Function, components: IComponent<unknown>[]): void {\n    const key = this.makeQueryKey(components)\n    this._systems.push([system, key])\n    this._queries[key] = { components, entities: [], subscriptions: [], changeHandlers: [] }\n  }\n\n  public removeComponent<T>(entity: Entity, component: IComponent<T>) {\n    if (!component || component.name === ID.name) return\n    delete entity[component.name]\n    this._handleRemoveCallbacks(entity)\n  }\n\n  public removeComponents(entity: Entity, components: IComponent<unknown>[]) {\n    if (!components || !~components.length) return\n    components.forEach(component => {\n      if (component.name === ID.name) return\n      delete entity[component.name]\n    })\n    this._handleRemoveCallbacks(entity)\n  }\n\n  public async run(...args: any[]): Promise<void> {\n    if (this.config.onBefore) await this.config.onBefore(...args)\n    if (this.config.parallel) {\n      this._systems.forEach(([system, queryKey]) => {\n        if (args) system(...args, this._queries[queryKey].entities)\n        else system(this._queries[queryKey].entities)\n      })\n    } else {\n      for (let [system, queryKey] of this._systems) {\n        if (args) await system(...args, this._queries[queryKey].entities)\n        else await system(this._queries[queryKey].entities)\n      }\n    }\n    if (this.config.onAfter) await this.config.onAfter(...args)\n  }\n\n  public subscribe(components: IComponent<unknown>[], callback: EntitiesCallback, emit?: boolean): () => void {\n    return this.makeSubscription(components, emit)(callback)\n  }\n\n  public makeSubscription(components: IComponent<unknown>[], emit?: boolean): (cb: EntitiesCallback) => () => void {\n    const key = this.makeQueryKey(components)\n    return (callback) => {\n      const entities = this.queryWithKey(key, components)\n      if (!!this._queries[key]) this._queries[key].subscriptions.push(callback)\n      else this._queries[key] = { components, entities, subscriptions: [callback], changeHandlers: [] }\n      if (emit) callback(entities)\n      return () => {\n        if (!!this._queries[key]) {\n          this._queries[key].subscriptions.splice(this._queries[key].subscriptions.indexOf(callback), 1)\n        }\n      }\n    }\n  }\n\n  public handleChange(components: IComponent<unknown>[], callback: ChangeCallback<unknown>): () => void {\n    return this.makeChangeHandler(components)(callback)\n  }\n\n  public makeChangeHandler(components: IComponent<unknown>[]): (cb: ChangeCallback<unknown>) => () => void {\n    const key = this.makeQueryKey(components)\n    return (callback) => {\n      if (!!this._queries[key]) this._queries[key].changeHandlers.push(callback)\n      else this._queries[key] = { components, entities: this.queryWithKey(key, components), subscriptions: [], changeHandlers: [callback] }\n      return () => {\n        if (!!this._queries[key]) {\n          this._queries[key].changeHandlers.splice(this._queries[key].changeHandlers.indexOf(callback), 1)\n        }\n      }\n    }\n  }\n\n  public unsubscribe(components: IComponent<unknown>[], callback: EntitiesCallback): void {\n    const key = this.makeQueryKey(components)\n    if (!!this._queries[key]) {\n      this._queries[key].subscriptions.splice(this._queries[key].subscriptions.indexOf(callback), 1)\n    }\n  }\n\n  public deregisterHandler(components: IComponent<unknown>[], callback: ChangeCallback<unknown>): void {\n    const key = this.makeQueryKey(components)\n    if (!!this._queries[key]) {\n      this._queries[key].subscriptions.splice(this._queries[key].changeHandlers.indexOf(callback), 1)\n    }\n  }\n\n  public updateComponent<T>(entity: Entity, Component: IComponent<T>, update: any | ComponentUpdater<T>): T {\n    const _update = this._update(entity, Component, update)\n    Object.values(this._queries).forEach(query => {\n      if (query.entities.includes(entity)) {\n        query.subscriptions.forEach(fn => fn(query.entities))\n        query.changeHandlers.forEach(fn => fn(entity, [[Component, _update]]))\n      }\n    })\n    return _update\n  }\n\n  public updateComponents(entity: Entity, updates: ComponentUpdate<any>[]): any[] {\n    const _updates = updates.map(([Component, update]) => ([Component, this._update(entity, Component, update)])) as [IComponent<any>, any][]\n    Object.values(this._queries).forEach(query => {\n      if (query.entities.includes(entity)) {\n        query.subscriptions.forEach(fn => fn(query.entities))\n        query.changeHandlers.forEach(fn => fn(entity, _updates))\n      }\n    })\n    return _updates\n  }\n\n  private _update<T>(entity: Entity, Component: IComponent<T>, update: any | ComponentUpdater<T>): any {\n    entity[Component.name] = typeof update === 'function' ? update(entity[Component.name]) || entity[Component.name] : update\n    return entity[Component.name]\n  }\n}\n"],"names":["pact","value","state","bind","observer","o","_this","onFulfilled","onRejected","_settle","thenable","Component","constructor","obj","Object","assign","this","ID","hasComponents","entity","components","every","c","name","config","makeQueryKey","map","sort","join","queryWithKey","key","persist","_queries","entities","values","_entities","filter","e","subscriptions","changeHandlers","_handleAddCallbacks","forEach","query","includes","push","fn","_handleRemoveCallbacks","splice","indexOf","keys","length","id","addComponent","addComponents","Constructor","args","createEntity","String","Date","valueOf","get","register","system","_systems","removeComponent","component","removeComponents","run","onAfter","parallel","result","then","check","i","_cycle","reject","queryKey","onBefore","subscribe","callback","emit","makeSubscription","handleChange","makeChangeHandler","unsubscribe","deregisterHandler","updateComponent","update","_update","updateComponents","updates","_updates"],"mappings":"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"}